{"version":3,"sources":["components/Header/index.js","components/Board/index.js","image.js","App.js","index.js"],"names":["Header","props","react_default","a","createElement","Fragment","className","message","score","total","highScore","Board","id","images","map","image","style","backgroundColor","color","key","index","onClick","clickHandler","App","state","clicked","handleImageClickById","imageId","_this","slice","console","log","findIndex","item","push","setState","sort","Math","random","components_Header","this","length","components_Board","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"+NAkBeA,MAhBf,SAAgBC,GACd,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,yBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAAf,0BACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAAWL,EAAMM,SAChCL,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAAf,kBACkBL,EAAMO,MADxB,OACmCP,EAAMQ,OAEzCP,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAf,eAAwCL,EAAMS,YAEhDR,EAAAC,EAAAC,cAAA,aCWSO,MAtBf,SAAeV,GACb,OACEC,EAAAC,EAAAC,cAAA,OAAKQ,GAAG,SACNV,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACZL,EAAMY,OAAOC,IAAI,SAAAC,GAAK,OACrBb,EAAAC,EAAAC,cAAA,OACEY,MAAO,CAAEC,gBAAiBF,EAAMG,OAChCZ,UAAU,sBACVM,GAAI,SAAWG,EACfI,IAAKJ,EAAMK,MACXC,QAAS,WACPpB,EAAMqB,aAAaP,EAAMK,gBCD1BP,EAbA,CACb,CAAEK,MAAO,SAAUE,MAAO,GAC1B,CAAEF,MAAO,OAAQE,MAAO,GACxB,CAAEF,MAAO,QAASE,MAAO,GACzB,CAAEF,MAAO,SAAUE,MAAO,GAC1B,CAAEF,MAAO,QAASE,MAAO,GACzB,CAAEF,MAAO,QAASE,MAAO,GACzB,CAAEF,MAAO,SAAUE,MAAO,GAC1B,CAAEF,MAAO,OAAQE,MAAO,GACxB,CAAEF,MAAO,OAAQE,MAAO,GACxB,CAAEF,MAAO,OAAQE,MAAO,KCqDXG,6MAxDbC,MAAQ,CACNjB,QAAS,0BACTC,MAAO,EACPK,OAAQA,EACRY,QAAS,GACTf,UAAW,KAGbgB,qBAAuB,SAAAC,GACrB,IAAIF,EAAUG,EAAKJ,MAAMC,QAAQI,MAAM,GACvCC,QAAQC,IAAI,WAAYN,EAASE,IAEoB,IAAjDF,EAAQO,UAAU,SAAAC,GAAI,OAAIN,IAAYM,KACxCR,EAAQS,KAAKP,GACbC,EAAKO,SAAS,CACZV,QAASA,EACTjB,MAAOoB,EAAKJ,MAAMhB,MAAQ,EAC1BD,QAAS,4BAIXqB,EAAKO,SAAS,CACZ5B,QAAS,uBACTG,UACEkB,EAAKJ,MAAMhB,MAAQoB,EAAKJ,MAAMd,UAC1BkB,EAAKJ,MAAMhB,MACXoB,EAAKJ,MAAMd,UACjBF,MAAO,EACPiB,QAAS,KAIb,IAAIZ,EAASe,EAAKJ,MAAMX,OAAOgB,MAAM,GACrChB,EAAOuB,KAAK,kBAAMC,KAAKC,SAAW,KAClCV,EAAKO,SAAS,CAAEtB,WAChBiB,QAAQC,IAAI,sBAAuBJ,4EAInC,OACEzB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAACmC,EAAD,CACEhC,QAASiC,KAAKhB,MAAMjB,QACpBC,MAAOgC,KAAKhB,MAAMhB,MAClBE,UAAW8B,KAAKhB,MAAMd,UACtBD,MAAO+B,KAAKhB,MAAMX,OAAO4B,SAE3BvC,EAAAC,EAAAC,cAACsC,EAAD,CACE7B,OAAQ2B,KAAKhB,MAAMX,OACnBS,aAAckB,KAAKd,+BAlDXiB,aCDlBC,IAASC,OAAO3C,EAAAC,EAAAC,cAAC0C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.8b5cf6f9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <>\r\n      <nav className=\"navbar navbar-inverse\">\r\n        <div className=\"title\">The clickiest of games</div>\r\n        <div className=\"message\">{props.message}</div>\r\n        <div className=\"score\">\r\n          You've guessed {props.score} of {props.total}\r\n        </div>\r\n        <div className=\"highScore\">High Score: {props.highScore}</div>\r\n      </nav>\r\n      <br />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction Board(props) {\r\n  return (\r\n    <div id=\"board\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          {props.images.map(image => (\r\n            <div\r\n              style={{ backgroundColor: image.color }}\r\n              className=\"card image col-4-md\"\r\n              id={\"image-\" + image}\r\n              key={image.index}\r\n              onClick={() => {\r\n                props.clickHandler(image.index);\r\n              }}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n","const images = [\r\n  { color: \"orange\", index: 1 },\r\n  { color: \"blue\", index: 2 },\r\n  { color: \"green\", index: 3 },\r\n  { color: \"yellow\", index: 4 },\r\n  { color: \"azure\", index: 5 },\r\n  { color: \"black\", index: 6 },\r\n  { color: \"purple\", index: 7 },\r\n  { color: \"grey\", index: 8 },\r\n  { color: \"pink\", index: 9 },\r\n  { color: \"lime\", index: 10 }\r\n];\r\n\r\nexport default images;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./components/Header\";\r\nimport Board from \"./components/Board\";\r\nimport images from \"./image\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    message: \"Click an image to start\",\r\n    score: 0,\r\n    images: images,\r\n    clicked: [],\r\n    highScore: 0\r\n  };\r\n\r\n  handleImageClickById = imageId => {\r\n    let clicked = this.state.clicked.slice(0);\r\n    console.log(\"Checking\", clicked, imageId);\r\n    // is this imageId in clicked\r\n    if (clicked.findIndex(item => imageId === item) === -1) {\r\n      clicked.push(imageId);\r\n      this.setState({\r\n        clicked: clicked,\r\n        score: this.state.score + 1,\r\n        message: \"Good guess, keep going\"\r\n      });\r\n    } else {\r\n      // you lose, start over\r\n      this.setState({\r\n        message: \"You Lose, start over\",\r\n        highScore:\r\n          this.state.score > this.state.highScore\r\n            ? this.state.score\r\n            : this.state.highScore,\r\n        score: 0,\r\n        clicked: []\r\n      });\r\n    }\r\n    // rearrange images\r\n    let images = this.state.images.slice(0);\r\n    images.sort(() => Math.random() - 0.5);\r\n    this.setState({ images });\r\n    console.log(\"handling click for \", imageId);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header\r\n          message={this.state.message}\r\n          score={this.state.score}\r\n          highScore={this.state.highScore}\r\n          total={this.state.images.length}\r\n        />\r\n        <Board\r\n          images={this.state.images}\r\n          clickHandler={this.handleImageClickById}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}